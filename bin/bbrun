#!/bin/bash

if ! [ -f "$1" ]; then
	echo USAGE:
	echo bbrun [bashbundle file] [versions folder]
	exit 1
fi

pwd="`pwd`"

dst=`mktemp -d`

# unpack to tmp
cp "$1" $dst/p.tar.gz
cd "$dst"
tar xf p.tar.gz version

# check version
if [ -w "/etc" ]; then
	versions=/etc/bashbundle/versions
else
	versions=~/.bashbundle/versions
fi
mkdir -p $versions

vfile="$versions/`basename "$1"`.version"
if [ -w "$vfile" ]
then
	if [ "`cat version`" -le "`cat "$vfile"`" ]
	then
		echo This Version is already installed
		echo remove $vfile if you want to rerun
		rm -rf "$dst" # cleanup
		exit 3
	fi
fi

tar xf p.tar.gz
rm p.tar.gz

function execute {
  # update version
  cp version "$vfile"
	# unpack bundle
	mkdir x
	cd x
	tar xf ../data.tar.gz
	# check for version spoofing
	if [ "`cat version`" == "`cat ../version`" ]
	then
		# execute
		bash run.bash
	else
		# spoofed
		echo Error: version spoofing
	fi
	# cleanup
	cd /
	rm -rf "$dst"
}


# check signature against keys
(find "$pwd" -type f -iname "*.pem" -print0;
 find /etc/bashbundle/keys -type f -iname "*.pem" -print0;
 find ~/.bashbundle/keys -type f -iname "*.pem" -print0) | (
while IFS= read -r -d $'\0' pubkey; do
	echo "test $pubkey"
	if openssl dgst -verify  "$pubkey" -signature "data.sig" < data.tar.gz
	then
		echo "successful!"
		execute
		exit
	fi
done

echo Signature does not match
exit 2
)

